#version 330



in vec3 normal;
in vec3 fragPos;

vec3 lightPos = vec3(0.0f, 1.0f, 3.0f);
vec3 viewPos = vec3(0.0, 0.0, -10f);
vec3 lightColor = vec3(0.0f, 1.0f, 0.0f);
vec3 objectColor = vec3(0.0f, 1.0f, 0.0f);
float spec = 0.2;
float diffuse = 0.6;

in vec3 LightIntensity;
void main(){

	float ambientStr = 0.1;
	vec3 ambient = ambientStr * lightColor;

	vec3 norm = normalize(normal);
	vec3 lightDir = normalize(lightPos = fragPos);

	vec3 viewDir = normalize(viewPos - fragPos);
	vec3 reflectDir = reflect(lightDir, norm);
	
	float spec2 = max(dot(viewDir, reflectDir), 0.0);
	float diff = max(dot(norm, lightDir), 0.0);


	float intensity = (diffuse * diff) + (spec * spec2);

 	if (intensity > 0.95) {
 		intensity = 1.1;
 	}
 	else if (intensity > 0.5) {
 		intensity = 0.7;
 	}
 	else if (intensity > 0.25) {
 		intensity = 0.4;
  	}
	else {
		intensity = 0.0;
	}


	vec3 result = intensity * objectColor;


	gl_FragColor = vec4 (result, 1.0);
}